#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
#ifndef PARTICLENETWORKBASE_SWIFT_H
#define PARTICLENETWORKBASE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="ParticleNetworkBase",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;

SWIFT_CLASS("_TtC19ParticleNetworkBase10AccessList")
@interface AccessList : NSObject
- (nonnull instancetype)initWithAddress:(NSString * _Nonnull)address storageKeys:(NSArray<NSString *> * _Nonnull)storageKeys OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum Action : NSInteger;
enum GasLevel : NSInteger;

/// type 1, EIP2930
SWIFT_CLASS("_TtC19ParticleNetworkBase23AccessListEIP2930TxData")
@interface AccessListEIP2930TxData : NSObject
/// All parameters should be hex string
- (nonnull instancetype)initWithGasPrice:(NSString * _Nonnull)gasPrice accessList:(AccessList * _Nullable)accessList nonce:(NSString * _Nonnull)nonce gasLimit:(NSString * _Nonnull)gasLimit from:(NSString * _Nonnull)from to:(NSString * _Nullable)to value:(NSString * _Nonnull)value data:(NSString * _Nonnull)data chainId:(NSString * _Nonnull)chainId v:(NSString * _Nullable)v r:(NSString * _Nullable)r s:(NSString * _Nullable)s action:(enum Action)action gasLevel:(enum GasLevel)gasLevel OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)serializeAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)init:(NSString * _Nonnull)hexString error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, Action, open) {
  ActionNormal = 0,
  ActionSpeedup = 1,
  ActionCancel = 2,
};

enum ChainType : NSInteger;
@class NativeCurrency;

SWIFT_CLASS_NAMED("ChainInfo")
@interface ChainInfo : NSObject
@property (nonatomic, readonly) NSInteger chainId;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly) enum ChainType chainType;
@property (nonatomic, readonly, copy) NSString * _Nonnull chainIcon;
@property (nonatomic, readonly, copy) NSString * _Nonnull uiName;
@property (nonatomic, readonly, copy) NSString * _Nonnull network;
@property (nonatomic, readonly, strong) NativeCurrency * _Nonnull nativeCurrency;
@property (nonatomic, readonly, copy) NSString * _Nonnull explorePath;
/// Ethereum Mainnet, chain id 1
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull ethereum;)
+ (ChainInfo * _Nonnull)ethereum SWIFT_WARN_UNUSED_RESULT;
/// Ethereum Goerli, chain id 5
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull ethereumGoerli;)
+ (ChainInfo * _Nonnull)ethereumGoerli SWIFT_WARN_UNUSED_RESULT;
/// Optimism Mainnet, chain id 10
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull optimism;)
+ (ChainInfo * _Nonnull)optimism SWIFT_WARN_UNUSED_RESULT;
/// ThunderCore Testnet, chain id 18
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull thunderCoreTestnet;)
+ (ChainInfo * _Nonnull)thunderCoreTestnet SWIFT_WARN_UNUSED_RESULT;
/// Cronos Mainnet, chain id 25
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull cronos;)
+ (ChainInfo * _Nonnull)cronos SWIFT_WARN_UNUSED_RESULT;
/// BSC Mainnet, chain id 56
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull bnbChain;)
+ (ChainInfo * _Nonnull)bnbChain SWIFT_WARN_UNUSED_RESULT;
/// OKC Testnet, chain id 65
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull oktcTestnet;)
+ (ChainInfo * _Nonnull)oktcTestnet SWIFT_WARN_UNUSED_RESULT;
/// OKC Mainnet, chain id 66
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull oktc;)
+ (ChainInfo * _Nonnull)oktc SWIFT_WARN_UNUSED_RESULT;
/// ConfluxESpace Testnet, chain id 71
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull confluxeSpaceTestnet;)
+ (ChainInfo * _Nonnull)confluxeSpaceTestnet SWIFT_WARN_UNUSED_RESULT;
/// Viction Mainnet, chain id 88
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull viction;)
+ (ChainInfo * _Nonnull)viction SWIFT_WARN_UNUSED_RESULT;
/// Viction Testnet, chain id 89
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull victionTestnet;)
+ (ChainInfo * _Nonnull)victionTestnet SWIFT_WARN_UNUSED_RESULT;
/// BSC Testnet, chain id 97
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull bnbChainTestnet;)
+ (ChainInfo * _Nonnull)bnbChainTestnet SWIFT_WARN_UNUSED_RESULT;
/// Gnosis Mainnet, chain id 100
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull gnosis;)
+ (ChainInfo * _Nonnull)gnosis SWIFT_WARN_UNUSED_RESULT;
/// Solana Mainnet, chain id 101
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull solana;)
+ (ChainInfo * _Nonnull)solana SWIFT_WARN_UNUSED_RESULT;
/// Solana Testnet, chain id 102
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull solanaTestnet;)
+ (ChainInfo * _Nonnull)solanaTestnet SWIFT_WARN_UNUSED_RESULT;
/// Solana Devnet, chain id 103
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull solanaDevnet;)
+ (ChainInfo * _Nonnull)solanaDevnet SWIFT_WARN_UNUSED_RESULT;
/// ThunderCore Mainnet, chain id 108
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull thunderCore;)
+ (ChainInfo * _Nonnull)thunderCore SWIFT_WARN_UNUSED_RESULT;
/// Heco Mainnet, chain id 128
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull heco;)
+ (ChainInfo * _Nonnull)heco SWIFT_WARN_UNUSED_RESULT;
/// Polygon Mainnet, chain id 137
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull polygon;)
+ (ChainInfo * _Nonnull)polygon SWIFT_WARN_UNUSED_RESULT;
/// Manta Mainnet, chain id 169
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull manta;)
+ (ChainInfo * _Nonnull)manta SWIFT_WARN_UNUSED_RESULT;
/// OKBC Testnet, chain id 195
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull x1Testnet;)
+ (ChainInfo * _Nonnull)x1Testnet SWIFT_WARN_UNUSED_RESULT;
/// opBNB Mainnet, chain id 204
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull opBNB;)
+ (ChainInfo * _Nonnull)opBNB SWIFT_WARN_UNUSED_RESULT;
/// MAPProtocol Testnet, chain id 212
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull mapProtocolTestnet;)
+ (ChainInfo * _Nonnull)mapProtocolTestnet SWIFT_WARN_UNUSED_RESULT;
/// Fantom Mainnet, chain id 250
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull fantom;)
+ (ChainInfo * _Nonnull)fantom SWIFT_WARN_UNUSED_RESULT;
/// zkSync Testnet, chain id 280
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull zkSyncEraTestnet;)
+ (ChainInfo * _Nonnull)zkSyncEraTestnet SWIFT_WARN_UNUSED_RESULT;
/// KCC Mainnet, chain id 321
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull kcc;)
+ (ChainInfo * _Nonnull)kcc SWIFT_WARN_UNUSED_RESULT;
/// KCC Testnet, chain id 322
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull kccTestnet;)
+ (ChainInfo * _Nonnull)kccTestnet SWIFT_WARN_UNUSED_RESULT;
/// zkSync Mainnet, chain id 324
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull zkSyncEra;)
+ (ChainInfo * _Nonnull)zkSyncEra SWIFT_WARN_UNUSED_RESULT;
/// Cronos Testnet, chain id 338
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull cronosTestnet;)
+ (ChainInfo * _Nonnull)cronosTestnet SWIFT_WARN_UNUSED_RESULT;
/// Optimism Testnet, chain id 420
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull optimismGoerli;)
+ (ChainInfo * _Nonnull)optimismGoerli SWIFT_WARN_UNUSED_RESULT;
/// PGN Mainnet, chain id 424
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull pgn;)
+ (ChainInfo * _Nonnull)pgn SWIFT_WARN_UNUSED_RESULT;
/// Metis Goerli, chain id 599
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull metisGoerli;)
+ (ChainInfo * _Nonnull)metisGoerli SWIFT_WARN_UNUSED_RESULT;
/// Zora Goerli, chain id 999
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull zoraGoerli;)
+ (ChainInfo * _Nonnull)zoraGoerli SWIFT_WARN_UNUSED_RESULT;
/// Klaytn Testnet, chain id 1001
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull klaytnTestnet;)
+ (ChainInfo * _Nonnull)klaytnTestnet SWIFT_WARN_UNUSED_RESULT;
/// ConfluxESpace Mainnet, chain id 1030
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull confluxeSpace;)
+ (ChainInfo * _Nonnull)confluxeSpace SWIFT_WARN_UNUSED_RESULT;
/// Metis Mainnet, chain id 1088
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull metis;)
+ (ChainInfo * _Nonnull)metis SWIFT_WARN_UNUSED_RESULT;
/// PolygonZkEVM Mainnet, chain id 1101
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull polygonzkEVM;)
+ (ChainInfo * _Nonnull)polygonzkEVM SWIFT_WARN_UNUSED_RESULT;
/// Moonbeam Mainnet, chain id 1284
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull moonbeam;)
+ (ChainInfo * _Nonnull)moonbeam SWIFT_WARN_UNUSED_RESULT;
/// Moonriver Mainnet, chain id 1285
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull moonriver;)
+ (ChainInfo * _Nonnull)moonriver SWIFT_WARN_UNUSED_RESULT;
/// Moonbeam Testnet, chain id 1287
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull moonbeamTestnet;)
+ (ChainInfo * _Nonnull)moonbeamTestnet SWIFT_WARN_UNUSED_RESULT;
/// PolygonZkEVM Testnet, chain id 1442
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull polygonzkEVMTestnet;)
+ (ChainInfo * _Nonnull)polygonzkEVMTestnet SWIFT_WARN_UNUSED_RESULT;
/// Kava Testnet, chain id 2221
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull kavaTestnet;)
+ (ChainInfo * _Nonnull)kavaTestnet SWIFT_WARN_UNUSED_RESULT;
/// Kava Mainnet, chain id 2222
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull kava;)
+ (ChainInfo * _Nonnull)kava SWIFT_WARN_UNUSED_RESULT;
/// Fantom Testnet, chain id 4002
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull fantomTestnet;)
+ (ChainInfo * _Nonnull)fantomTestnet SWIFT_WARN_UNUSED_RESULT;
/// Mantle Mainnet, chain id 5000
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull mantle;)
+ (ChainInfo * _Nonnull)mantle SWIFT_WARN_UNUSED_RESULT;
/// Mantle Testnet, chain id 5001
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull mantleTestnet;)
+ (ChainInfo * _Nonnull)mantleTestnet SWIFT_WARN_UNUSED_RESULT;
/// opBNB Testnet, chain id 5611
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull opBNBTestnet;)
+ (ChainInfo * _Nonnull)opBNBTestnet SWIFT_WARN_UNUSED_RESULT;
/// ZetaChain Testnet, chain id 7001
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull zetaChainTestnet;)
+ (ChainInfo * _Nonnull)zetaChainTestnet SWIFT_WARN_UNUSED_RESULT;
/// Klaytn Mainnet, chain id 8217
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull klaytn;)
+ (ChainInfo * _Nonnull)klaytn SWIFT_WARN_UNUSED_RESULT;
/// Base Mainnet, chain id 8453
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull base;)
+ (ChainInfo * _Nonnull)base SWIFT_WARN_UNUSED_RESULT;
/// Combo Mainnet, chain id 9980
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull combo;)
+ (ChainInfo * _Nonnull)combo SWIFT_WARN_UNUSED_RESULT;
/// Gnosis Testnet, chain id 10200
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull gnosisTestnet;)
+ (ChainInfo * _Nonnull)gnosisTestnet SWIFT_WARN_UNUSED_RESULT;
/// Lumoz Testnet, chain id 12008
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull lumozzkEVMTestnet;)
+ (ChainInfo * _Nonnull)lumozzkEVMTestnet SWIFT_WARN_UNUSED_RESULT;
/// ReadON Testnet, chain id 12015
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull readONTestnet;)
+ (ChainInfo * _Nonnull)readONTestnet SWIFT_WARN_UNUSED_RESULT;
/// Eosevm Testnet, chain id 15557
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull eosevmTestnet;)
+ (ChainInfo * _Nonnull)eosevmTestnet SWIFT_WARN_UNUSED_RESULT;
/// Eosevm Mainnet, chain id 17777
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull eosevm;)
+ (ChainInfo * _Nonnull)eosevm SWIFT_WARN_UNUSED_RESULT;
/// MAPProtocol Mainnet, chain id 22776
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull mapProtocol;)
+ (ChainInfo * _Nonnull)mapProtocol SWIFT_WARN_UNUSED_RESULT;
/// Arbitrum Mainnet, chain id 42161
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull arbitrumOne;)
+ (ChainInfo * _Nonnull)arbitrumOne SWIFT_WARN_UNUSED_RESULT;
/// Arbitrum Mainnet, chain id 42170
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull arbitrumNova;)
+ (ChainInfo * _Nonnull)arbitrumNova SWIFT_WARN_UNUSED_RESULT;
/// Celo Mainnet, chain id 42220
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull celo;)
+ (ChainInfo * _Nonnull)celo SWIFT_WARN_UNUSED_RESULT;
/// OasisEmerald Testnet, chain id 42261
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull oasisEmeraldTestnet;)
+ (ChainInfo * _Nonnull)oasisEmeraldTestnet SWIFT_WARN_UNUSED_RESULT;
/// OasisEmerald Mainnet, chain id 42262
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull oasisEmerald;)
+ (ChainInfo * _Nonnull)oasisEmerald SWIFT_WARN_UNUSED_RESULT;
/// Avalanche Testnet, chain id 43113
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull avalancheTestnet;)
+ (ChainInfo * _Nonnull)avalancheTestnet SWIFT_WARN_UNUSED_RESULT;
/// Avalanche Mainnet, chain id 43114
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull avalanche;)
+ (ChainInfo * _Nonnull)avalanche SWIFT_WARN_UNUSED_RESULT;
/// Celo Testnet, chain id 44787
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull celoTestnet;)
+ (ChainInfo * _Nonnull)celoTestnet SWIFT_WARN_UNUSED_RESULT;
/// PGN Sepolia, chain id 58008
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull pgnSepolia;)
+ (ChainInfo * _Nonnull)pgnSepolia SWIFT_WARN_UNUSED_RESULT;
/// Linea Goerli, chain id 59140
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull lineaGoerli;)
+ (ChainInfo * _Nonnull)lineaGoerli SWIFT_WARN_UNUSED_RESULT;
/// Linea Mainnet, chain id 59144
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull linea;)
+ (ChainInfo * _Nonnull)linea SWIFT_WARN_UNUSED_RESULT;
/// Polygon Mumbai, chain id 80001
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull polygonMumbai;)
+ (ChainInfo * _Nonnull)polygonMumbai SWIFT_WARN_UNUSED_RESULT;
/// Base Goerli, chain id 84531
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull baseGoerli;)
+ (ChainInfo * _Nonnull)baseGoerli SWIFT_WARN_UNUSED_RESULT;
/// Combo Testnet, chain id 91715
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull comboTestnet;)
+ (ChainInfo * _Nonnull)comboTestnet SWIFT_WARN_UNUSED_RESULT;
/// Taiko Jolnir, chain id 167007
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull taikoJolnir;)
+ (ChainInfo * _Nonnull)taikoJolnir SWIFT_WARN_UNUSED_RESULT;
/// PlatON Mainnet, chain id 210425
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull platON;)
+ (ChainInfo * _Nonnull)platON SWIFT_WARN_UNUSED_RESULT;
/// Arbitrum Goerli, chain id 421613
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull arbitrumGoerli;)
+ (ChainInfo * _Nonnull)arbitrumGoerli SWIFT_WARN_UNUSED_RESULT;
/// Scroll Sepolia, chain id 534351
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull scrollSepolia;)
+ (ChainInfo * _Nonnull)scrollSepolia SWIFT_WARN_UNUSED_RESULT;
/// Scroll Mainnet, chain id 534352
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull scroll;)
+ (ChainInfo * _Nonnull)scroll SWIFT_WARN_UNUSED_RESULT;
/// AstarZkEVM Testnet, chain id 1261120
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull astarzkEVMTestnet;)
+ (ChainInfo * _Nonnull)astarzkEVMTestnet SWIFT_WARN_UNUSED_RESULT;
/// PlatON Testnet, chain id 2206132
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull platONTestnet;)
+ (ChainInfo * _Nonnull)platONTestnet SWIFT_WARN_UNUSED_RESULT;
/// Manta Testnet, chain id 3441005
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull mantaTestnet;)
+ (ChainInfo * _Nonnull)mantaTestnet SWIFT_WARN_UNUSED_RESULT;
/// Zora Mainnet, chain id 7777777
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull zora;)
+ (ChainInfo * _Nonnull)zora SWIFT_WARN_UNUSED_RESULT;
/// Ethereum Sepolia, chain id 11155111
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull ethereumSepolia;)
+ (ChainInfo * _Nonnull)ethereumSepolia SWIFT_WARN_UNUSED_RESULT;
/// Tron Mainnet, chain id 728126428
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull tron;)
+ (ChainInfo * _Nonnull)tron SWIFT_WARN_UNUSED_RESULT;
/// Aurora Mainnet, chain id 1313161554
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull aurora;)
+ (ChainInfo * _Nonnull)aurora SWIFT_WARN_UNUSED_RESULT;
/// Aurora Testnet, chain id 1313161555
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull auroraTestnet;)
+ (ChainInfo * _Nonnull)auroraTestnet SWIFT_WARN_UNUSED_RESULT;
/// Nebula Mainnet, chain id 1482601649
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull skaleNebula;)
+ (ChainInfo * _Nonnull)skaleNebula SWIFT_WARN_UNUSED_RESULT;
/// Harmony Mainnet, chain id 1666600000
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull harmony;)
+ (ChainInfo * _Nonnull)harmony SWIFT_WARN_UNUSED_RESULT;
/// Harmony Testnet, chain id 1666700000
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull harmonyTestnet;)
+ (ChainInfo * _Nonnull)harmonyTestnet SWIFT_WARN_UNUSED_RESULT;
/// Tron Shasta, chain id 2494104990
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull tronShasta;)
+ (ChainInfo * _Nonnull)tronShasta SWIFT_WARN_UNUSED_RESULT;
/// Tron Nile, chain id 3448148188
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull tronNile;)
+ (ChainInfo * _Nonnull)tronNile SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface ChainInfo (SWIFT_EXTENSION(ParticleNetworkBase))
+ (ChainInfo * _Nullable)getChainInfoWithChainId:(NSInteger)chainId chainName:(NSString * _Nonnull)chainName SWIFT_WARN_UNUSED_RESULT;
+ (ChainInfo * _Nullable)getEvmChainWithChainId:(NSInteger)chainId SWIFT_WARN_UNUSED_RESULT;
+ (ChainInfo * _Nullable)getSolanaChainWithChainId:(NSInteger)chainId SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<ChainInfo *> * _Nonnull)getAllChainsWithComparator:(BOOL (^ _Nullable)(ChainInfo * _Nonnull, ChainInfo * _Nonnull))comparator SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) BOOL (^ _Nonnull defaultComparator)(ChainInfo * _Nonnull, ChainInfo * _Nonnull);)
+ (BOOL (^ _Nonnull)(ChainInfo * _Nonnull, ChainInfo * _Nonnull))defaultComparator SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<ChainInfo *> * _Nonnull allNetworks;)
+ (NSArray<ChainInfo *> * _Nonnull)allNetworks SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSArray<ChainInfo *> * _Nonnull bridgeableNetworks;)
+ (NSArray<ChainInfo *> * _Nonnull)bridgeableNetworks SWIFT_WARN_UNUSED_RESULT;
+ (void)setBridgeableNetworks:(NSArray<ChainInfo *> * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSArray<ChainInfo *> * _Nonnull swapableNetworks;)
+ (NSArray<ChainInfo *> * _Nonnull)swapableNetworks SWIFT_WARN_UNUSED_RESULT;
+ (void)setSwapableNetworks:(NSArray<ChainInfo *> * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSArray<ChainInfo *> * _Nonnull fusionableNetworks;)
+ (NSArray<ChainInfo *> * _Nonnull)fusionableNetworks SWIFT_WARN_UNUSED_RESULT;
+ (void)setFusionableNetworks:(NSArray<ChainInfo *> * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSArray<ChainInfo *> * _Nonnull didableNetworks;)
+ (NSArray<ChainInfo *> * _Nonnull)didableNetworks SWIFT_WARN_UNUSED_RESULT;
+ (void)setDidableNetworks:(NSArray<ChainInfo *> * _Nonnull)value;
/// Get Particle Node
/// \param projectId Project id
///
/// \param projectKey Project client key
///
///
/// returns:
/// Node url.
- (NSString * _Nonnull)getParticleNodeWithProjectId:(NSString * _Nonnull)projectId projectClientKey:(NSString * _Nonnull)projectClientKey SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, ChainType, open) {
  ChainTypeSolana = 0,
  ChainTypeEvm = 1,
};


SWIFT_CLASS("_TtC19ParticleNetworkBase9Constants")
@interface Constants : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtCC19ParticleNetworkBase9Constants6Regexs")
@interface Regexs : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (NSString * _Nonnull)base58PublicKey SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)base58String SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)evmAddress SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)hexString SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)email SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)phoneNumber SWIFT_WARN_UNUSED_RESULT;
@end


/// type 2, EIP1559
SWIFT_CLASS("_TtC19ParticleNetworkBase22FeeMarketEIP1559TxData")
@interface FeeMarketEIP1559TxData : NSObject
/// All parameters should be hex string except action.
- (nonnull instancetype)initWithMaxPriorityFeePerGas:(NSString * _Nonnull)maxPriorityFeePerGas maxFeePerGas:(NSString * _Nonnull)maxFeePerGas nonce:(NSString * _Nonnull)nonce gasLimit:(NSString * _Nonnull)gasLimit from:(NSString * _Nonnull)from to:(NSString * _Nullable)to value:(NSString * _Nonnull)value data:(NSString * _Nonnull)data chainId:(NSString * _Nonnull)chainId v:(NSString * _Nullable)v r:(NSString * _Nullable)r s:(NSString * _Nullable)s action:(enum Action)action gasLevel:(enum GasLevel)gasLevel OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)serializeAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)init:(NSString * _Nonnull)hexString error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, GasLevel, open) {
  GasLevelNone = 0,
  GasLevelCustom = 1,
  GasLevelLow = 2,
  GasLevelMedium = 3,
  GasLevelHigh = 4,
};


SWIFT_CLASS("_TtC19ParticleNetworkBase18LoginAuthorization")
@interface LoginAuthorization : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, LoginType, closed) {
  LoginTypeEmail = 0,
  LoginTypePhone = 1,
  LoginTypeGoogle = 2,
  LoginTypeFacebook = 3,
  LoginTypeApple = 4,
  LoginTypeTwitter = 5,
  LoginTypeDiscord = 6,
  LoginTypeGithub = 7,
  LoginTypeTwitch = 8,
  LoginTypeMicrosoft = 9,
  LoginTypeLinkedin = 10,
  LoginTypeJwt = 11,
};


SWIFT_CLASS_NAMED("NativeCurrency")
@interface NativeCurrency : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull symbol;
@property (nonatomic, readonly) NSInteger decimals;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class ParticleNetworkConfiguration;
@class ParticleOptions;
enum DevEnvironment : NSInteger;

SWIFT_CLASS("_TtC19ParticleNetworkBase15ParticleNetwork")
@interface ParticleNetwork : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull sdkVersion;)
+ (NSString * _Nonnull)sdkVersion SWIFT_WARN_UNUSED_RESULT;
/// Initialize Particle Network
/// \param config Particle network configuration
///
+ (void)initializeWithConfig:(ParticleNetworkConfiguration * _Nonnull)config;
/// Initialize with options
/// \param options Particle Options
///
/// \param config Particle network configuration
///
+ (void)initializeWithOptions:(ParticleOptions * _Nonnull)options config:(ParticleNetworkConfiguration * _Nonnull)config;
/// Cet chain info
///
/// returns:
/// Chain info
+ (ChainInfo * _Nonnull)getChainInfo SWIFT_WARN_UNUSED_RESULT;
/// Get development environment
///
/// returns:
/// Development environment
+ (enum DevEnvironment)getDevEnv SWIFT_WARN_UNUSED_RESULT;
/// Set chain info
/// \param chainInfo Chain info
///
+ (void)setChainInfo:(ChainInfo * _Nonnull)chainInfo;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




@interface ParticleNetwork (SWIFT_EXTENSION(ParticleNetworkBase))
@end

typedef SWIFT_ENUM(NSInteger, DevEnvironment, open) {
  DevEnvironmentDebug = 0,
  DevEnvironmentStaging = 1,
  DevEnvironmentProduction = 2,
};




@interface ParticleNetwork (SWIFT_EXTENSION(ParticleNetworkBase))
@end



@interface ParticleNetwork (SWIFT_EXTENSION(ParticleNetworkBase))
/// Set user interface sytle
/// \param style Default value is unspecified, that follows system interface style.
///
+ (void)setInterfaceStyle:(UIUserInterfaceStyle)style SWIFT_DEPRECATED_MSG("", "setAppearance");
/// Get user interface sytle
///
/// returns:
/// User interface style
+ (UIUserInterfaceStyle)getInterfaceStyle SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("", "getAppearance");
@end



SWIFT_CLASS("_TtC19ParticleNetworkBase28ParticleNetworkConfiguration")
@interface ParticleNetworkConfiguration : NSObject
/// Init method
/// \param chainInfo Chain info
///
/// \param devEnv Development environment
///
- (nonnull instancetype)initWithChainInfo:(ChainInfo * _Nonnull)chainInfo devEnv:(enum DevEnvironment)devEnv OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC19ParticleNetworkBase15ParticleOptions")
@interface ParticleOptions : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC19ParticleNetworkBase19SecurityAccountInfo")
@interface SecurityAccountInfo : NSObject
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, copy) NSString * _Nullable phone;
@property (nonatomic) BOOL hasSetPaymentPassword;
@property (nonatomic) BOOL hasSetMasterPassword;
- (nonnull instancetype)initWithEmail:(NSString * _Nullable)email phone:(NSString * _Nullable)phone hasSetPaymentPassword:(BOOL)hasSetPaymentPassword hasSetMasterPassword:(BOOL)hasSetMasterPassword OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// Social login prompt
typedef SWIFT_ENUM(NSInteger, SocialLoginPrompt, open) {
/// define null for compatibility in both Swift and Objective-C, it works like nil.
  SocialLoginPromptNull = 0,
  SocialLoginPromptNone = 1,
  SocialLoginPromptConsent = 2,
  SocialLoginPromptSelectAccount = 3,
};


SWIFT_CLASS("_TtC19ParticleNetworkBase15SupportAuthType")
@interface SupportAuthType : NSObject
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SupportAuthType * _Nonnull all;)
+ (SupportAuthType * _Nonnull)all SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SupportAuthType * _Nonnull google;)
+ (SupportAuthType * _Nonnull)google SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SupportAuthType * _Nonnull facebook;)
+ (SupportAuthType * _Nonnull)facebook SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SupportAuthType * _Nonnull apple;)
+ (SupportAuthType * _Nonnull)apple SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SupportAuthType * _Nonnull twitter;)
+ (SupportAuthType * _Nonnull)twitter SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SupportAuthType * _Nonnull discord;)
+ (SupportAuthType * _Nonnull)discord SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SupportAuthType * _Nonnull github;)
+ (SupportAuthType * _Nonnull)github SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SupportAuthType * _Nonnull twitch;)
+ (SupportAuthType * _Nonnull)twitch SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SupportAuthType * _Nonnull microsoft;)
+ (SupportAuthType * _Nonnull)microsoft SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SupportAuthType * _Nonnull linkedin;)
+ (SupportAuthType * _Nonnull)linkedin SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SupportAuthType * _Nonnull email;)
+ (SupportAuthType * _Nonnull)email SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SupportAuthType * _Nonnull phone;)
+ (SupportAuthType * _Nonnull)phone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC19ParticleNetworkBase25ThirdPartyUserInfoWarpper")
@interface ThirdPartyUserInfoWarpper : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable picture;
- (nonnull instancetype)initWithId:(NSString * _Nullable)id name:(NSString * _Nullable)name email:(NSString * _Nullable)email picture:(NSString * _Nullable)picture OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC19ParticleNetworkBase17ThirdPartyWarpper")
@interface ThirdPartyWarpper : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable provider;
@property (nonatomic, readonly, strong) ThirdPartyUserInfoWarpper * _Nullable userInfo;
- (nonnull instancetype)initWithProvider:(NSString * _Nullable)provider userInfo:(ThirdPartyUserInfoWarpper * _Nullable)userInfo OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// type 0, legacy
SWIFT_CLASS("_TtC19ParticleNetworkBase6TxData")
@interface TxData : NSObject
/// All parameters should be hex string
- (nonnull instancetype)initWithGasPrice:(NSString * _Nonnull)gasPrice nonce:(NSString * _Nonnull)nonce gasLimit:(NSString * _Nonnull)gasLimit from:(NSString * _Nonnull)from to:(NSString * _Nullable)to value:(NSString * _Nonnull)value data:(NSString * _Nonnull)data chainId:(NSString * _Nonnull)chainId v:(NSString * _Nullable)v r:(NSString * _Nullable)r s:(NSString * _Nullable)s action:(enum Action)action gasLevel:(enum GasLevel)gasLevel OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)serializeAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)init:(NSString * _Nonnull)hexString error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@class WalletInfo;

SWIFT_CLASS("_TtC19ParticleNetworkBase8UserInfo")
@interface UserInfo : NSObject
@property (nonatomic, copy) NSString * _Nonnull token;
@property (nonatomic, readonly, copy) NSString * _Nonnull uuid;
@property (nonatomic, readonly, copy) NSArray<WalletInfo *> * _Nonnull wallets;
@property (nonatomic, strong) SecurityAccountInfo * _Nullable securityAccount;
@property (nonatomic, readonly, copy) NSString * _Nullable avatar;
@property (nonatomic, readonly, copy) NSString * _Nullable createdAt;
@property (nonatomic, readonly, copy) NSString * _Nullable updatedAt;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable appleEmail;
@property (nonatomic, readonly, copy) NSString * _Nullable appleId;
@property (nonatomic, readonly, copy) NSString * _Nullable facebookEmail;
@property (nonatomic, readonly, copy) NSString * _Nullable facebookId;
@property (nonatomic, readonly, copy) NSString * _Nullable googleEmail;
@property (nonatomic, readonly, copy) NSString * _Nullable googleId;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly, copy) NSString * _Nullable phone;
@property (nonatomic, copy) NSString * _Nullable twitterId;
@property (nonatomic, copy) NSString * _Nullable twitterEmail;
@property (nonatomic, readonly, copy) NSString * _Nullable discordId;
@property (nonatomic, readonly, copy) NSString * _Nullable discordEmail;
@property (nonatomic, readonly, copy) NSString * _Nullable githubId;
@property (nonatomic, readonly, copy) NSString * _Nullable githubEmail;
@property (nonatomic, readonly, copy) NSString * _Nullable twitchId;
@property (nonatomic, readonly, copy) NSString * _Nullable twitchEmail;
@property (nonatomic, readonly, copy) NSString * _Nullable microsoftId;
@property (nonatomic, readonly, copy) NSString * _Nullable microsoftEmail;
@property (nonatomic, readonly, copy) NSString * _Nullable linkedinId;
@property (nonatomic, readonly, copy) NSString * _Nullable linkedinEmail;
@property (nonatomic, strong) ThirdPartyWarpper * _Nullable thirdParty;
@property (nonatomic, copy) NSString * _Nullable signature;
@property (nonatomic, copy) NSString * _Nullable message;
- (nonnull instancetype)initWithToken:(NSString * _Nonnull)token uuid:(NSString * _Nonnull)uuid wallets:(NSArray<WalletInfo *> * _Nonnull)wallets securityAccount:(SecurityAccountInfo * _Nullable)securityAccount avatar:(NSString * _Nullable)avatar createdAt:(NSString * _Nullable)createdAt updatedAt:(NSString * _Nullable)updatedAt email:(NSString * _Nullable)email appleEmail:(NSString * _Nullable)appleEmail appleId:(NSString * _Nullable)appleId facebookEmail:(NSString * _Nullable)facebookEmail facebookId:(NSString * _Nullable)facebookId googleEmail:(NSString * _Nullable)googleEmail googleId:(NSString * _Nullable)googleId name:(NSString * _Nullable)name phone:(NSString * _Nullable)phone twitterId:(NSString * _Nullable)twitterId twitterEmail:(NSString * _Nullable)twitterEmail discordId:(NSString * _Nullable)discordId discordEmail:(NSString * _Nullable)discordEmail githubId:(NSString * _Nullable)githubId githubEmail:(NSString * _Nullable)githubEmail twitchId:(NSString * _Nullable)twitchId twitchEmail:(NSString * _Nullable)twitchEmail microsoftId:(NSString * _Nullable)microsoftId microsoftEmail:(NSString * _Nullable)microsoftEmail linkedinId:(NSString * _Nullable)linkedinId linkedinEmail:(NSString * _Nullable)linkedinEmail thirdParty:(ThirdPartyWarpper * _Nullable)thirdParty signature:(NSString * _Nullable)signature message:(NSString * _Nullable)message OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC19ParticleNetworkBase10WalletInfo")
@interface WalletInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull uuid;
@property (nonatomic, readonly, copy) NSString * _Nonnull chainName;
@property (nonatomic, readonly, copy) NSString * _Nonnull publicAddress;
- (nonnull instancetype)initWithUuid:(NSString * _Nonnull)uuid chainName:(NSString * _Nonnull)chainName publicAddress:(NSString * _Nonnull)publicAddress OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
#ifndef PARTICLENETWORKBASE_SWIFT_H
#define PARTICLENETWORKBASE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="ParticleNetworkBase",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;

SWIFT_CLASS("_TtC19ParticleNetworkBase10AccessList")
@interface AccessList : NSObject
- (nonnull instancetype)initWithAddress:(NSString * _Nonnull)address storageKeys:(NSArray<NSString *> * _Nonnull)storageKeys OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum Action : NSInteger;
enum GasLevel : NSInteger;

/// type 1, EIP2930
SWIFT_CLASS("_TtC19ParticleNetworkBase23AccessListEIP2930TxData")
@interface AccessListEIP2930TxData : NSObject
/// All parameters should be hex string
- (nonnull instancetype)initWithGasPrice:(NSString * _Nonnull)gasPrice accessList:(AccessList * _Nullable)accessList nonce:(NSString * _Nonnull)nonce gasLimit:(NSString * _Nonnull)gasLimit from:(NSString * _Nonnull)from to:(NSString * _Nullable)to value:(NSString * _Nonnull)value data:(NSString * _Nonnull)data chainId:(NSString * _Nonnull)chainId v:(NSString * _Nullable)v r:(NSString * _Nullable)r s:(NSString * _Nullable)s action:(enum Action)action gasLevel:(enum GasLevel)gasLevel OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)serializeAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)init:(NSString * _Nonnull)hexString error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, Action, open) {
  ActionNormal = 0,
  ActionSpeedup = 1,
  ActionCancel = 2,
};

enum ChainType : NSInteger;
@class NativeCurrency;

SWIFT_CLASS_NAMED("ChainInfo")
@interface ChainInfo : NSObject
@property (nonatomic, readonly) NSInteger chainId;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly) enum ChainType chainType;
@property (nonatomic, readonly, copy) NSString * _Nonnull chainIcon;
@property (nonatomic, readonly, copy) NSString * _Nonnull uiName;
@property (nonatomic, readonly, copy) NSString * _Nonnull network;
@property (nonatomic, readonly, strong) NativeCurrency * _Nonnull nativeCurrency;
@property (nonatomic, readonly, copy) NSString * _Nonnull explorePath;
/// Ethereum Mainnet, chain id 1
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull ethereum;)
+ (ChainInfo * _Nonnull)ethereum SWIFT_WARN_UNUSED_RESULT;
/// Ethereum Goerli, chain id 5
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull ethereumGoerli;)
+ (ChainInfo * _Nonnull)ethereumGoerli SWIFT_WARN_UNUSED_RESULT;
/// Optimism Mainnet, chain id 10
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull optimism;)
+ (ChainInfo * _Nonnull)optimism SWIFT_WARN_UNUSED_RESULT;
/// ThunderCore Testnet, chain id 18
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull thunderCoreTestnet;)
+ (ChainInfo * _Nonnull)thunderCoreTestnet SWIFT_WARN_UNUSED_RESULT;
/// Cronos Mainnet, chain id 25
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull cronos;)
+ (ChainInfo * _Nonnull)cronos SWIFT_WARN_UNUSED_RESULT;
/// BSC Mainnet, chain id 56
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull bnbChain;)
+ (ChainInfo * _Nonnull)bnbChain SWIFT_WARN_UNUSED_RESULT;
/// OKC Testnet, chain id 65
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull oktcTestnet;)
+ (ChainInfo * _Nonnull)oktcTestnet SWIFT_WARN_UNUSED_RESULT;
/// OKC Mainnet, chain id 66
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull oktc;)
+ (ChainInfo * _Nonnull)oktc SWIFT_WARN_UNUSED_RESULT;
/// ConfluxESpace Testnet, chain id 71
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull confluxeSpaceTestnet;)
+ (ChainInfo * _Nonnull)confluxeSpaceTestnet SWIFT_WARN_UNUSED_RESULT;
/// Viction Mainnet, chain id 88
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull viction;)
+ (ChainInfo * _Nonnull)viction SWIFT_WARN_UNUSED_RESULT;
/// Viction Testnet, chain id 89
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull victionTestnet;)
+ (ChainInfo * _Nonnull)victionTestnet SWIFT_WARN_UNUSED_RESULT;
/// BSC Testnet, chain id 97
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull bnbChainTestnet;)
+ (ChainInfo * _Nonnull)bnbChainTestnet SWIFT_WARN_UNUSED_RESULT;
/// Gnosis Mainnet, chain id 100
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull gnosis;)
+ (ChainInfo * _Nonnull)gnosis SWIFT_WARN_UNUSED_RESULT;
/// Solana Mainnet, chain id 101
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull solana;)
+ (ChainInfo * _Nonnull)solana SWIFT_WARN_UNUSED_RESULT;
/// Solana Testnet, chain id 102
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull solanaTestnet;)
+ (ChainInfo * _Nonnull)solanaTestnet SWIFT_WARN_UNUSED_RESULT;
/// Solana Devnet, chain id 103
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull solanaDevnet;)
+ (ChainInfo * _Nonnull)solanaDevnet SWIFT_WARN_UNUSED_RESULT;
/// ThunderCore Mainnet, chain id 108
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull thunderCore;)
+ (ChainInfo * _Nonnull)thunderCore SWIFT_WARN_UNUSED_RESULT;
/// Heco Mainnet, chain id 128
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull heco;)
+ (ChainInfo * _Nonnull)heco SWIFT_WARN_UNUSED_RESULT;
/// Polygon Mainnet, chain id 137
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull polygon;)
+ (ChainInfo * _Nonnull)polygon SWIFT_WARN_UNUSED_RESULT;
/// Manta Mainnet, chain id 169
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull manta;)
+ (ChainInfo * _Nonnull)manta SWIFT_WARN_UNUSED_RESULT;
/// OKBC Testnet, chain id 195
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull x1Testnet;)
+ (ChainInfo * _Nonnull)x1Testnet SWIFT_WARN_UNUSED_RESULT;
/// opBNB Mainnet, chain id 204
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull opBNB;)
+ (ChainInfo * _Nonnull)opBNB SWIFT_WARN_UNUSED_RESULT;
/// MAPProtocol Testnet, chain id 212
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull mapProtocolTestnet;)
+ (ChainInfo * _Nonnull)mapProtocolTestnet SWIFT_WARN_UNUSED_RESULT;
/// Fantom Mainnet, chain id 250
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull fantom;)
+ (ChainInfo * _Nonnull)fantom SWIFT_WARN_UNUSED_RESULT;
/// zkSync Testnet, chain id 280
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull zkSyncEraTestnet;)
+ (ChainInfo * _Nonnull)zkSyncEraTestnet SWIFT_WARN_UNUSED_RESULT;
/// KCC Mainnet, chain id 321
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull kcc;)
+ (ChainInfo * _Nonnull)kcc SWIFT_WARN_UNUSED_RESULT;
/// KCC Testnet, chain id 322
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull kccTestnet;)
+ (ChainInfo * _Nonnull)kccTestnet SWIFT_WARN_UNUSED_RESULT;
/// zkSync Mainnet, chain id 324
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull zkSyncEra;)
+ (ChainInfo * _Nonnull)zkSyncEra SWIFT_WARN_UNUSED_RESULT;
/// Cronos Testnet, chain id 338
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull cronosTestnet;)
+ (ChainInfo * _Nonnull)cronosTestnet SWIFT_WARN_UNUSED_RESULT;
/// Optimism Testnet, chain id 420
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull optimismGoerli;)
+ (ChainInfo * _Nonnull)optimismGoerli SWIFT_WARN_UNUSED_RESULT;
/// PGN Mainnet, chain id 424
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull pgn;)
+ (ChainInfo * _Nonnull)pgn SWIFT_WARN_UNUSED_RESULT;
/// Metis Goerli, chain id 599
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull metisGoerli;)
+ (ChainInfo * _Nonnull)metisGoerli SWIFT_WARN_UNUSED_RESULT;
/// Zora Goerli, chain id 999
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull zoraGoerli;)
+ (ChainInfo * _Nonnull)zoraGoerli SWIFT_WARN_UNUSED_RESULT;
/// Klaytn Testnet, chain id 1001
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull klaytnTestnet;)
+ (ChainInfo * _Nonnull)klaytnTestnet SWIFT_WARN_UNUSED_RESULT;
/// ConfluxESpace Mainnet, chain id 1030
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull confluxeSpace;)
+ (ChainInfo * _Nonnull)confluxeSpace SWIFT_WARN_UNUSED_RESULT;
/// Metis Mainnet, chain id 1088
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull metis;)
+ (ChainInfo * _Nonnull)metis SWIFT_WARN_UNUSED_RESULT;
/// PolygonZkEVM Mainnet, chain id 1101
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull polygonzkEVM;)
+ (ChainInfo * _Nonnull)polygonzkEVM SWIFT_WARN_UNUSED_RESULT;
/// Moonbeam Mainnet, chain id 1284
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull moonbeam;)
+ (ChainInfo * _Nonnull)moonbeam SWIFT_WARN_UNUSED_RESULT;
/// Moonriver Mainnet, chain id 1285
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull moonriver;)
+ (ChainInfo * _Nonnull)moonriver SWIFT_WARN_UNUSED_RESULT;
/// Moonbeam Testnet, chain id 1287
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull moonbeamTestnet;)
+ (ChainInfo * _Nonnull)moonbeamTestnet SWIFT_WARN_UNUSED_RESULT;
/// PolygonZkEVM Testnet, chain id 1442
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull polygonzkEVMTestnet;)
+ (ChainInfo * _Nonnull)polygonzkEVMTestnet SWIFT_WARN_UNUSED_RESULT;
/// Kava Testnet, chain id 2221
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull kavaTestnet;)
+ (ChainInfo * _Nonnull)kavaTestnet SWIFT_WARN_UNUSED_RESULT;
/// Kava Mainnet, chain id 2222
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull kava;)
+ (ChainInfo * _Nonnull)kava SWIFT_WARN_UNUSED_RESULT;
/// Fantom Testnet, chain id 4002
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull fantomTestnet;)
+ (ChainInfo * _Nonnull)fantomTestnet SWIFT_WARN_UNUSED_RESULT;
/// Mantle Mainnet, chain id 5000
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull mantle;)
+ (ChainInfo * _Nonnull)mantle SWIFT_WARN_UNUSED_RESULT;
/// Mantle Testnet, chain id 5001
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull mantleTestnet;)
+ (ChainInfo * _Nonnull)mantleTestnet SWIFT_WARN_UNUSED_RESULT;
/// opBNB Testnet, chain id 5611
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull opBNBTestnet;)
+ (ChainInfo * _Nonnull)opBNBTestnet SWIFT_WARN_UNUSED_RESULT;
/// ZetaChain Testnet, chain id 7001
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull zetaChainTestnet;)
+ (ChainInfo * _Nonnull)zetaChainTestnet SWIFT_WARN_UNUSED_RESULT;
/// Klaytn Mainnet, chain id 8217
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull klaytn;)
+ (ChainInfo * _Nonnull)klaytn SWIFT_WARN_UNUSED_RESULT;
/// Base Mainnet, chain id 8453
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull base;)
+ (ChainInfo * _Nonnull)base SWIFT_WARN_UNUSED_RESULT;
/// Combo Mainnet, chain id 9980
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull combo;)
+ (ChainInfo * _Nonnull)combo SWIFT_WARN_UNUSED_RESULT;
/// Gnosis Testnet, chain id 10200
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull gnosisTestnet;)
+ (ChainInfo * _Nonnull)gnosisTestnet SWIFT_WARN_UNUSED_RESULT;
/// Lumoz Testnet, chain id 12008
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull lumozzkEVMTestnet;)
+ (ChainInfo * _Nonnull)lumozzkEVMTestnet SWIFT_WARN_UNUSED_RESULT;
/// ReadON Testnet, chain id 12015
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull readONTestnet;)
+ (ChainInfo * _Nonnull)readONTestnet SWIFT_WARN_UNUSED_RESULT;
/// Eosevm Testnet, chain id 15557
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull eosevmTestnet;)
+ (ChainInfo * _Nonnull)eosevmTestnet SWIFT_WARN_UNUSED_RESULT;
/// Eosevm Mainnet, chain id 17777
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull eosevm;)
+ (ChainInfo * _Nonnull)eosevm SWIFT_WARN_UNUSED_RESULT;
/// MAPProtocol Mainnet, chain id 22776
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull mapProtocol;)
+ (ChainInfo * _Nonnull)mapProtocol SWIFT_WARN_UNUSED_RESULT;
/// Arbitrum Mainnet, chain id 42161
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull arbitrumOne;)
+ (ChainInfo * _Nonnull)arbitrumOne SWIFT_WARN_UNUSED_RESULT;
/// Arbitrum Mainnet, chain id 42170
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull arbitrumNova;)
+ (ChainInfo * _Nonnull)arbitrumNova SWIFT_WARN_UNUSED_RESULT;
/// Celo Mainnet, chain id 42220
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull celo;)
+ (ChainInfo * _Nonnull)celo SWIFT_WARN_UNUSED_RESULT;
/// OasisEmerald Testnet, chain id 42261
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull oasisEmeraldTestnet;)
+ (ChainInfo * _Nonnull)oasisEmeraldTestnet SWIFT_WARN_UNUSED_RESULT;
/// OasisEmerald Mainnet, chain id 42262
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull oasisEmerald;)
+ (ChainInfo * _Nonnull)oasisEmerald SWIFT_WARN_UNUSED_RESULT;
/// Avalanche Testnet, chain id 43113
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull avalancheTestnet;)
+ (ChainInfo * _Nonnull)avalancheTestnet SWIFT_WARN_UNUSED_RESULT;
/// Avalanche Mainnet, chain id 43114
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull avalanche;)
+ (ChainInfo * _Nonnull)avalanche SWIFT_WARN_UNUSED_RESULT;
/// Celo Testnet, chain id 44787
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull celoTestnet;)
+ (ChainInfo * _Nonnull)celoTestnet SWIFT_WARN_UNUSED_RESULT;
/// PGN Sepolia, chain id 58008
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull pgnSepolia;)
+ (ChainInfo * _Nonnull)pgnSepolia SWIFT_WARN_UNUSED_RESULT;
/// Linea Goerli, chain id 59140
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull lineaGoerli;)
+ (ChainInfo * _Nonnull)lineaGoerli SWIFT_WARN_UNUSED_RESULT;
/// Linea Mainnet, chain id 59144
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull linea;)
+ (ChainInfo * _Nonnull)linea SWIFT_WARN_UNUSED_RESULT;
/// Polygon Mumbai, chain id 80001
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull polygonMumbai;)
+ (ChainInfo * _Nonnull)polygonMumbai SWIFT_WARN_UNUSED_RESULT;
/// Base Goerli, chain id 84531
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull baseGoerli;)
+ (ChainInfo * _Nonnull)baseGoerli SWIFT_WARN_UNUSED_RESULT;
/// Combo Testnet, chain id 91715
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull comboTestnet;)
+ (ChainInfo * _Nonnull)comboTestnet SWIFT_WARN_UNUSED_RESULT;
/// Taiko Jolnir, chain id 167007
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull taikoJolnir;)
+ (ChainInfo * _Nonnull)taikoJolnir SWIFT_WARN_UNUSED_RESULT;
/// PlatON Mainnet, chain id 210425
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull platON;)
+ (ChainInfo * _Nonnull)platON SWIFT_WARN_UNUSED_RESULT;
/// Arbitrum Goerli, chain id 421613
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull arbitrumGoerli;)
+ (ChainInfo * _Nonnull)arbitrumGoerli SWIFT_WARN_UNUSED_RESULT;
/// Scroll Sepolia, chain id 534351
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull scrollSepolia;)
+ (ChainInfo * _Nonnull)scrollSepolia SWIFT_WARN_UNUSED_RESULT;
/// Scroll Mainnet, chain id 534352
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull scroll;)
+ (ChainInfo * _Nonnull)scroll SWIFT_WARN_UNUSED_RESULT;
/// AstarZkEVM Testnet, chain id 1261120
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull astarzkEVMTestnet;)
+ (ChainInfo * _Nonnull)astarzkEVMTestnet SWIFT_WARN_UNUSED_RESULT;
/// PlatON Testnet, chain id 2206132
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull platONTestnet;)
+ (ChainInfo * _Nonnull)platONTestnet SWIFT_WARN_UNUSED_RESULT;
/// Manta Testnet, chain id 3441005
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull mantaTestnet;)
+ (ChainInfo * _Nonnull)mantaTestnet SWIFT_WARN_UNUSED_RESULT;
/// Zora Mainnet, chain id 7777777
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull zora;)
+ (ChainInfo * _Nonnull)zora SWIFT_WARN_UNUSED_RESULT;
/// Ethereum Sepolia, chain id 11155111
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull ethereumSepolia;)
+ (ChainInfo * _Nonnull)ethereumSepolia SWIFT_WARN_UNUSED_RESULT;
/// Tron Mainnet, chain id 728126428
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull tron;)
+ (ChainInfo * _Nonnull)tron SWIFT_WARN_UNUSED_RESULT;
/// Aurora Mainnet, chain id 1313161554
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull aurora;)
+ (ChainInfo * _Nonnull)aurora SWIFT_WARN_UNUSED_RESULT;
/// Aurora Testnet, chain id 1313161555
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull auroraTestnet;)
+ (ChainInfo * _Nonnull)auroraTestnet SWIFT_WARN_UNUSED_RESULT;
/// Nebula Mainnet, chain id 1482601649
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull skaleNebula;)
+ (ChainInfo * _Nonnull)skaleNebula SWIFT_WARN_UNUSED_RESULT;
/// Harmony Mainnet, chain id 1666600000
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull harmony;)
+ (ChainInfo * _Nonnull)harmony SWIFT_WARN_UNUSED_RESULT;
/// Harmony Testnet, chain id 1666700000
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull harmonyTestnet;)
+ (ChainInfo * _Nonnull)harmonyTestnet SWIFT_WARN_UNUSED_RESULT;
/// Tron Shasta, chain id 2494104990
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull tronShasta;)
+ (ChainInfo * _Nonnull)tronShasta SWIFT_WARN_UNUSED_RESULT;
/// Tron Nile, chain id 3448148188
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ChainInfo * _Nonnull tronNile;)
+ (ChainInfo * _Nonnull)tronNile SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface ChainInfo (SWIFT_EXTENSION(ParticleNetworkBase))
+ (ChainInfo * _Nullable)getChainInfoWithChainId:(NSInteger)chainId chainName:(NSString * _Nonnull)chainName SWIFT_WARN_UNUSED_RESULT;
+ (ChainInfo * _Nullable)getEvmChainWithChainId:(NSInteger)chainId SWIFT_WARN_UNUSED_RESULT;
+ (ChainInfo * _Nullable)getSolanaChainWithChainId:(NSInteger)chainId SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<ChainInfo *> * _Nonnull)getAllChainsWithComparator:(BOOL (^ _Nullable)(ChainInfo * _Nonnull, ChainInfo * _Nonnull))comparator SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) BOOL (^ _Nonnull defaultComparator)(ChainInfo * _Nonnull, ChainInfo * _Nonnull);)
+ (BOOL (^ _Nonnull)(ChainInfo * _Nonnull, ChainInfo * _Nonnull))defaultComparator SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<ChainInfo *> * _Nonnull allNetworks;)
+ (NSArray<ChainInfo *> * _Nonnull)allNetworks SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSArray<ChainInfo *> * _Nonnull bridgeableNetworks;)
+ (NSArray<ChainInfo *> * _Nonnull)bridgeableNetworks SWIFT_WARN_UNUSED_RESULT;
+ (void)setBridgeableNetworks:(NSArray<ChainInfo *> * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSArray<ChainInfo *> * _Nonnull swapableNetworks;)
+ (NSArray<ChainInfo *> * _Nonnull)swapableNetworks SWIFT_WARN_UNUSED_RESULT;
+ (void)setSwapableNetworks:(NSArray<ChainInfo *> * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSArray<ChainInfo *> * _Nonnull fusionableNetworks;)
+ (NSArray<ChainInfo *> * _Nonnull)fusionableNetworks SWIFT_WARN_UNUSED_RESULT;
+ (void)setFusionableNetworks:(NSArray<ChainInfo *> * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSArray<ChainInfo *> * _Nonnull didableNetworks;)
+ (NSArray<ChainInfo *> * _Nonnull)didableNetworks SWIFT_WARN_UNUSED_RESULT;
+ (void)setDidableNetworks:(NSArray<ChainInfo *> * _Nonnull)value;
/// Get Particle Node
/// \param projectId Project id
///
/// \param projectKey Project client key
///
///
/// returns:
/// Node url.
- (NSString * _Nonnull)getParticleNodeWithProjectId:(NSString * _Nonnull)projectId projectClientKey:(NSString * _Nonnull)projectClientKey SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, ChainType, open) {
  ChainTypeSolana = 0,
  ChainTypeEvm = 1,
};


SWIFT_CLASS("_TtC19ParticleNetworkBase9Constants")
@interface Constants : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtCC19ParticleNetworkBase9Constants6Regexs")
@interface Regexs : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (NSString * _Nonnull)base58PublicKey SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)base58String SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)evmAddress SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)hexString SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)email SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)phoneNumber SWIFT_WARN_UNUSED_RESULT;
@end


/// type 2, EIP1559
SWIFT_CLASS("_TtC19ParticleNetworkBase22FeeMarketEIP1559TxData")
@interface FeeMarketEIP1559TxData : NSObject
/// All parameters should be hex string except action.
- (nonnull instancetype)initWithMaxPriorityFeePerGas:(NSString * _Nonnull)maxPriorityFeePerGas maxFeePerGas:(NSString * _Nonnull)maxFeePerGas nonce:(NSString * _Nonnull)nonce gasLimit:(NSString * _Nonnull)gasLimit from:(NSString * _Nonnull)from to:(NSString * _Nullable)to value:(NSString * _Nonnull)value data:(NSString * _Nonnull)data chainId:(NSString * _Nonnull)chainId v:(NSString * _Nullable)v r:(NSString * _Nullable)r s:(NSString * _Nullable)s action:(enum Action)action gasLevel:(enum GasLevel)gasLevel OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)serializeAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)init:(NSString * _Nonnull)hexString error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, GasLevel, open) {
  GasLevelNone = 0,
  GasLevelCustom = 1,
  GasLevelLow = 2,
  GasLevelMedium = 3,
  GasLevelHigh = 4,
};


SWIFT_CLASS("_TtC19ParticleNetworkBase18LoginAuthorization")
@interface LoginAuthorization : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, LoginType, closed) {
  LoginTypeEmail = 0,
  LoginTypePhone = 1,
  LoginTypeGoogle = 2,
  LoginTypeFacebook = 3,
  LoginTypeApple = 4,
  LoginTypeTwitter = 5,
  LoginTypeDiscord = 6,
  LoginTypeGithub = 7,
  LoginTypeTwitch = 8,
  LoginTypeMicrosoft = 9,
  LoginTypeLinkedin = 10,
  LoginTypeJwt = 11,
};


SWIFT_CLASS_NAMED("NativeCurrency")
@interface NativeCurrency : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull symbol;
@property (nonatomic, readonly) NSInteger decimals;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class ParticleNetworkConfiguration;
@class ParticleOptions;
enum DevEnvironment : NSInteger;

SWIFT_CLASS("_TtC19ParticleNetworkBase15ParticleNetwork")
@interface ParticleNetwork : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull sdkVersion;)
+ (NSString * _Nonnull)sdkVersion SWIFT_WARN_UNUSED_RESULT;
/// Initialize Particle Network
/// \param config Particle network configuration
///
+ (void)initializeWithConfig:(ParticleNetworkConfiguration * _Nonnull)config;
/// Initialize with options
/// \param options Particle Options
///
/// \param config Particle network configuration
///
+ (void)initializeWithOptions:(ParticleOptions * _Nonnull)options config:(ParticleNetworkConfiguration * _Nonnull)config;
/// Cet chain info
///
/// returns:
/// Chain info
+ (ChainInfo * _Nonnull)getChainInfo SWIFT_WARN_UNUSED_RESULT;
/// Get development environment
///
/// returns:
/// Development environment
+ (enum DevEnvironment)getDevEnv SWIFT_WARN_UNUSED_RESULT;
/// Set chain info
/// \param chainInfo Chain info
///
+ (void)setChainInfo:(ChainInfo * _Nonnull)chainInfo;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




@interface ParticleNetwork (SWIFT_EXTENSION(ParticleNetworkBase))
@end

typedef SWIFT_ENUM(NSInteger, DevEnvironment, open) {
  DevEnvironmentDebug = 0,
  DevEnvironmentStaging = 1,
  DevEnvironmentProduction = 2,
};




@interface ParticleNetwork (SWIFT_EXTENSION(ParticleNetworkBase))
@end



@interface ParticleNetwork (SWIFT_EXTENSION(ParticleNetworkBase))
/// Set user interface sytle
/// \param style Default value is unspecified, that follows system interface style.
///
+ (void)setInterfaceStyle:(UIUserInterfaceStyle)style SWIFT_DEPRECATED_MSG("", "setAppearance");
/// Get user interface sytle
///
/// returns:
/// User interface style
+ (UIUserInterfaceStyle)getInterfaceStyle SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("", "getAppearance");
@end



SWIFT_CLASS("_TtC19ParticleNetworkBase28ParticleNetworkConfiguration")
@interface ParticleNetworkConfiguration : NSObject
/// Init method
/// \param chainInfo Chain info
///
/// \param devEnv Development environment
///
- (nonnull instancetype)initWithChainInfo:(ChainInfo * _Nonnull)chainInfo devEnv:(enum DevEnvironment)devEnv OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC19ParticleNetworkBase15ParticleOptions")
@interface ParticleOptions : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC19ParticleNetworkBase19SecurityAccountInfo")
@interface SecurityAccountInfo : NSObject
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, copy) NSString * _Nullable phone;
@property (nonatomic) BOOL hasSetPaymentPassword;
@property (nonatomic) BOOL hasSetMasterPassword;
- (nonnull instancetype)initWithEmail:(NSString * _Nullable)email phone:(NSString * _Nullable)phone hasSetPaymentPassword:(BOOL)hasSetPaymentPassword hasSetMasterPassword:(BOOL)hasSetMasterPassword OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// Social login prompt
typedef SWIFT_ENUM(NSInteger, SocialLoginPrompt, open) {
/// define null for compatibility in both Swift and Objective-C, it works like nil.
  SocialLoginPromptNull = 0,
  SocialLoginPromptNone = 1,
  SocialLoginPromptConsent = 2,
  SocialLoginPromptSelectAccount = 3,
};


SWIFT_CLASS("_TtC19ParticleNetworkBase15SupportAuthType")
@interface SupportAuthType : NSObject
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SupportAuthType * _Nonnull all;)
+ (SupportAuthType * _Nonnull)all SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SupportAuthType * _Nonnull google;)
+ (SupportAuthType * _Nonnull)google SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SupportAuthType * _Nonnull facebook;)
+ (SupportAuthType * _Nonnull)facebook SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SupportAuthType * _Nonnull apple;)
+ (SupportAuthType * _Nonnull)apple SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SupportAuthType * _Nonnull twitter;)
+ (SupportAuthType * _Nonnull)twitter SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SupportAuthType * _Nonnull discord;)
+ (SupportAuthType * _Nonnull)discord SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SupportAuthType * _Nonnull github;)
+ (SupportAuthType * _Nonnull)github SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SupportAuthType * _Nonnull twitch;)
+ (SupportAuthType * _Nonnull)twitch SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SupportAuthType * _Nonnull microsoft;)
+ (SupportAuthType * _Nonnull)microsoft SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SupportAuthType * _Nonnull linkedin;)
+ (SupportAuthType * _Nonnull)linkedin SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SupportAuthType * _Nonnull email;)
+ (SupportAuthType * _Nonnull)email SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SupportAuthType * _Nonnull phone;)
+ (SupportAuthType * _Nonnull)phone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC19ParticleNetworkBase25ThirdPartyUserInfoWarpper")
@interface ThirdPartyUserInfoWarpper : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable picture;
- (nonnull instancetype)initWithId:(NSString * _Nullable)id name:(NSString * _Nullable)name email:(NSString * _Nullable)email picture:(NSString * _Nullable)picture OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC19ParticleNetworkBase17ThirdPartyWarpper")
@interface ThirdPartyWarpper : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable provider;
@property (nonatomic, readonly, strong) ThirdPartyUserInfoWarpper * _Nullable userInfo;
- (nonnull instancetype)initWithProvider:(NSString * _Nullable)provider userInfo:(ThirdPartyUserInfoWarpper * _Nullable)userInfo OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// type 0, legacy
SWIFT_CLASS("_TtC19ParticleNetworkBase6TxData")
@interface TxData : NSObject
/// All parameters should be hex string
- (nonnull instancetype)initWithGasPrice:(NSString * _Nonnull)gasPrice nonce:(NSString * _Nonnull)nonce gasLimit:(NSString * _Nonnull)gasLimit from:(NSString * _Nonnull)from to:(NSString * _Nullable)to value:(NSString * _Nonnull)value data:(NSString * _Nonnull)data chainId:(NSString * _Nonnull)chainId v:(NSString * _Nullable)v r:(NSString * _Nullable)r s:(NSString * _Nullable)s action:(enum Action)action gasLevel:(enum GasLevel)gasLevel OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)serializeAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)init:(NSString * _Nonnull)hexString error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@class WalletInfo;

SWIFT_CLASS("_TtC19ParticleNetworkBase8UserInfo")
@interface UserInfo : NSObject
@property (nonatomic, copy) NSString * _Nonnull token;
@property (nonatomic, readonly, copy) NSString * _Nonnull uuid;
@property (nonatomic, readonly, copy) NSArray<WalletInfo *> * _Nonnull wallets;
@property (nonatomic, strong) SecurityAccountInfo * _Nullable securityAccount;
@property (nonatomic, readonly, copy) NSString * _Nullable avatar;
@property (nonatomic, readonly, copy) NSString * _Nullable createdAt;
@property (nonatomic, readonly, copy) NSString * _Nullable updatedAt;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable appleEmail;
@property (nonatomic, readonly, copy) NSString * _Nullable appleId;
@property (nonatomic, readonly, copy) NSString * _Nullable facebookEmail;
@property (nonatomic, readonly, copy) NSString * _Nullable facebookId;
@property (nonatomic, readonly, copy) NSString * _Nullable googleEmail;
@property (nonatomic, readonly, copy) NSString * _Nullable googleId;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly, copy) NSString * _Nullable phone;
@property (nonatomic, copy) NSString * _Nullable twitterId;
@property (nonatomic, copy) NSString * _Nullable twitterEmail;
@property (nonatomic, readonly, copy) NSString * _Nullable discordId;
@property (nonatomic, readonly, copy) NSString * _Nullable discordEmail;
@property (nonatomic, readonly, copy) NSString * _Nullable githubId;
@property (nonatomic, readonly, copy) NSString * _Nullable githubEmail;
@property (nonatomic, readonly, copy) NSString * _Nullable twitchId;
@property (nonatomic, readonly, copy) NSString * _Nullable twitchEmail;
@property (nonatomic, readonly, copy) NSString * _Nullable microsoftId;
@property (nonatomic, readonly, copy) NSString * _Nullable microsoftEmail;
@property (nonatomic, readonly, copy) NSString * _Nullable linkedinId;
@property (nonatomic, readonly, copy) NSString * _Nullable linkedinEmail;
@property (nonatomic, strong) ThirdPartyWarpper * _Nullable thirdParty;
@property (nonatomic, copy) NSString * _Nullable signature;
@property (nonatomic, copy) NSString * _Nullable message;
- (nonnull instancetype)initWithToken:(NSString * _Nonnull)token uuid:(NSString * _Nonnull)uuid wallets:(NSArray<WalletInfo *> * _Nonnull)wallets securityAccount:(SecurityAccountInfo * _Nullable)securityAccount avatar:(NSString * _Nullable)avatar createdAt:(NSString * _Nullable)createdAt updatedAt:(NSString * _Nullable)updatedAt email:(NSString * _Nullable)email appleEmail:(NSString * _Nullable)appleEmail appleId:(NSString * _Nullable)appleId facebookEmail:(NSString * _Nullable)facebookEmail facebookId:(NSString * _Nullable)facebookId googleEmail:(NSString * _Nullable)googleEmail googleId:(NSString * _Nullable)googleId name:(NSString * _Nullable)name phone:(NSString * _Nullable)phone twitterId:(NSString * _Nullable)twitterId twitterEmail:(NSString * _Nullable)twitterEmail discordId:(NSString * _Nullable)discordId discordEmail:(NSString * _Nullable)discordEmail githubId:(NSString * _Nullable)githubId githubEmail:(NSString * _Nullable)githubEmail twitchId:(NSString * _Nullable)twitchId twitchEmail:(NSString * _Nullable)twitchEmail microsoftId:(NSString * _Nullable)microsoftId microsoftEmail:(NSString * _Nullable)microsoftEmail linkedinId:(NSString * _Nullable)linkedinId linkedinEmail:(NSString * _Nullable)linkedinEmail thirdParty:(ThirdPartyWarpper * _Nullable)thirdParty signature:(NSString * _Nullable)signature message:(NSString * _Nullable)message OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC19ParticleNetworkBase10WalletInfo")
@interface WalletInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull uuid;
@property (nonatomic, readonly, copy) NSString * _Nonnull chainName;
@property (nonatomic, readonly, copy) NSString * _Nonnull publicAddress;
- (nonnull instancetype)initWithUuid:(NSString * _Nonnull)uuid chainName:(NSString * _Nonnull)chainName publicAddress:(NSString * _Nonnull)publicAddress OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
